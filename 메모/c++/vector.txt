배열이랑 비슷함

템플릿 기반이므로 임의타입을 요소로 가질수 있으며, 요소 개수에 따라 동적으로 메모리를 관리

구조가 단순하고 사용방법이 쉬우며 속도도 빠른편 > 실용적이라 활용빈도 Up


특징

배열 대체가능

동일 타입의 자료 집합이며 각 요소는 연속된 위치에 배치된다

연속된 위치에 배치되므로 임의 위치를 빠른 속도로 엑세스 할 수 있다

최상위 레벨의 임의 접근 반복자를 제공하므로 STL의 거의 모든 알고리즘 사용가능

삽입, 삭제 속도가 느리다. 중간 삽입, 삭제는 더 느리다


vector와 배열

배열의 크기는 고정이지만 vector는 요소 개수에 따라 동적으로 늘어난다

배열과 vector 모두 사용방법이 쉽다

배열과 vector 모두 데이터를 연속된 위치에 순차적으로 저장한다

연속된 위치에 순차적으로 저장하므로 랜덤 엑세스가 가능하다

속도는 보통 배열이 vector보다 빠르다


vector를 사용해야 하는경우

저장할 데이터의 개수가 가변적일때

중간에 데이터 삽입, 삭제가 적거나 없을때

저장된 요소를 자주 검색하지 않을때

랜덤 엑세스를 자주 할때




push_back이란?

뒤에 하나씩 덧붙이기


사용법

vector<자료형>변수;  //선언
ex)vector<int>damage;

변수.push_back(추가할값);
ex)damage.push_back(500);
    damage.push_back(159);

damage[0] 은 500
damage[1] 은 159

