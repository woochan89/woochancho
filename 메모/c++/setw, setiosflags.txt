필요헤더파일
#include<iomanip>

setw

1. setw(숫자) : 숫자 만큼 공백을 만드는 함수



	cout << setiosflags(ios::right) << setw(10) << setfill('1') << "우찬" << endl;
-> 10칸을 비우고 문자열 "우찬"을 우측부터 채운다음 남은 공간을 전부 1로 메꾼다





setiosflags

1. 출력 방식을 설정하는 함수
2. cout과 함께 사용됨
3. 인자로 들어가는 명령어는 다음과 같다

dec - 정수 I / O의 10 진수 기본을 사용합니다.
oct - 정수 I / O를위한 8 진베이스 사용
hex - 정수 I / O의 경우 16 진수 기본을 사용합니다.
basefield - dec|oct|hex|0 마스킹 작업에 유용합니다.
left - 왼쪽 조정 (오른쪽에 채우기 문자 추가)
right - 오른쪽 조정 (왼쪽에 채우기 문자 추가)
internal - 내부 조정 (내부 지정 점에 문자 채우기 추가)
adjustfield - left|right|internal . 마스킹 작업에 유용함
scientific - 과학 표기법을 사용하여 부동 소수점 유형을 생성하거나 고정 된 것과 결합 된 경우 16 진수 표기법을 생성합니다.
fixed - 고정 표기법을 사용하여 부동 소수점 유형을 생성하거나 과학적으로 결합 된 경우 16 진수 표기법을 생성합니다.
floatfield - scientific|fixed|(scientific|fixed)|0 . 마스킹 작업에 유용함
boolalpha - bool 유형을 영숫자 형식으로 삽입 및 추출합니다.
showbase - 정수 출력의 숫자 기준을 나타내는 접두사를 생성하고 화폐 입출력에 통화 표시기가 필요합니다. -> 보통 cout<<setiosflags(ios::showbase)<<hex; 이런식으로 출력되는 값의 진법 설정한다
showpoint - 부동 소수점 숫자 출력을 위해 무조건 소수점 문자 생성
showpos - 음수가 아닌 숫자 출력에 대해 + 문자를 생성합니다.
skipws - 특정 입력 작업 전에 선행 공백을 건너 뜁니다.
unitbuf 각 출력 작업 후에 출력을 플러시합니다.
uppercase - 특정 출력 출력 작업에서 특정 소문자를 uppercase 대체합니다.

ex)
cout<<setiosflags(ios::showbase)<<hex;