해당 파일 우클릭>속성>Windows Sdk 버전 변경해보기

처음에 변수만들 생각하지 말고 무슨 함수가 필요한지 알고리즘이 필요한지 구상하고
변수 생성

알고리즘 시 로그식지양

공간복잡도는 처음변수입력시 정해지고 물리적 한계가 있기 때문에 신경쓸 필요없다

CPU 프레임당 1번 연산

데이터가 많을때 연산횟수가 작은것을 선택

==가 비교연산

비교연산이 적을수록 좋다

항상 최악의 경우를 생각해야됨

while(first==last)가 아님?
->
예를 들어 2,3만 남았을때 3을 반으로 나누면 1.5 즉 1이 되므로 first값인 2보다 작아져버린다


==연산자가 중요함

nlong 은 O(n)에 살짝씩 가까워짐


O(1)가 제일 빠른데 안쓰는 이유는 컴퓨터의 부분적인 시간이 중요한게 아니고 전체적인 시간이 중요하기때문
->병목현상

부분적인 시간 아니고 전체적인 시간이 중요


배열의 최대값 구하는식 = sizeof(arr1) / sizeof(int)  arr1의 사이즈/int의 사이즈



재귀

자기참조 구조체 쓸때 for문 말고 재귀함수 이용하기

재귀함수는 for문 상위호환 느낌

int Fibo(int n)
{
if (n == 1)
return 0;
else if (n == 2)
return 1;
else
return Fibo(n - 1) + Fibo(n - 2);
}

이런식으로 재귀함수안에 두개의 재귀함수가 포함되는 경우도 있다