*선입선출(FIFO - First In,First Out)->먼저 들어오면 먼저 나감

*한쪽 끝(rear)에서는 삽입 연산만 이루어지며 다른 한쪽 끝(front)에서는 삭제 연산만 이루어지는 '유한'순서 리스트이다

*1차원 배열을 이용한 순차표현

*인덱스(주소)를 값으로 가지는 front, rear라는 두개의 변수와 큐의 사이즈를 나타내는 n이라는 변수를 사용

*rear에서 삽입 되므루 rear가 점차 증가하여 rean=n-1인 경우 큐는 full인 상태




단점

*큐에 삽입이 되며 점차 rear가 증가하게 되면 결국 가득차게 된다 하지만 이떼 큐에 원소가 꽉 차있지 않을 수 있다. front에서 삭제가 일어났다면 그만큼 공간이 비었기 때문이다. 따라서 가득차게 되었을때 첫번째 원소의 위치를 큐의 [0]번 주소로 이동한뒤 이것을 기준으로 rear의 위치도 다시 정해주어야 한다

*위의 문제로 순차 표현 큐는 많은 비용(큐 원소 이동에 따른 지연시간)을 발생하게 됨



원형 큐

*큐의 순차표현시 원형큐를 이용하면 원소의 이동없이 사용할 수 있다