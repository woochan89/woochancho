보간 탐색은 그냥 절반으로 줄이는 이진탐색이랑 달리 적정 mid 값을 찾아 좀 더 최대값을 줄이는것

중복키 존재하면 안됨 -> 중복 숫자가 존재하면 안 됨 -> 중복된 숫자가 들어오면 숫자 저장안하고 리턴


탐색키가 고유해야한다->중복사용 불가->중복되는 숫자없이 표현하기 쉬워서 숫자를 사용한것일뿐  인트만 사용 가능 한 건 아님

이진 탐색 트리 -> 중위순회(루트 노드를 기준으로 왼쪽은 작은 숫자 오른쪽은 큰숫자를 사용하므로)

사전구조 dictionary

테이블에서 기본적으로 중복키가 존재할수 없지만 사용한다면 체이닝을 이용한 것


규칙적인 연결구조가 없기 때문에 탐색과정이 제일 어렵지만 ,가중치와 비주얼로 표현하기 위해 사용

간선의 집합 E(G), 정점의 집합 V(G) 

방향,무방향 그래프를 표현할떄 괄호로 차이를 둔다 ex)무방향{(A,B)}     방향{<A,B>}

순서가 없고 시작지점만 있음됨
연결이 되어 있다는게 중요하지 하나씩 따로 할당해서 만들 필요는 없음

한번에 처리하기->스택

일률적으로 하나씩->큐




벡터는 기본으로 포함되지 않음

end==NULL ?

컨테이너 조건이랑 반복자 조건이랑 같지 않아도 되는지?



단항조건자 이항조건자

string splice


프레임 -> 팩토리 메서드



map 또는 multimap등을 이용해서 과제하기(추상팩토리&팩토리메소드 사용)

지금 까지 배워본거 최대한 활용해서 과제하기 -> 쓰던것만 쓰지말고 안써본거 위주로