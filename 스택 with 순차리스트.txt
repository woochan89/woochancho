#include<iostream>
#include<stdio.h>

typedef int sdata;

typedef struct _stack {
	sdata arr[100];
	int top;
}Stack;




//초기화
void Sinit(Stack *stack) {
	stack->top = -1;
}

//체크
bool SEmpty(Stack stack) {
	bool flag;
	(stack.top == -1) ? flag = 1 : flag = 0;//비어있으면 1 아니면 0 반환
	return flag;
}

//삽입
void Spush(Stack *stack, sdata data) {
	stack->arr[++stack->top] = data;
}

//출력
sdata Speek(Stack *stack) {
	return stack->arr[stack->top];
}

//제거
sdata Spop(Stack *stack) {
	sdata tmpData = stack->arr[stack->top];
	stack->arr[stack->top--] = NULL;
	return tmpData;
}

int main()
{
	Stack stack;
	sdata data;
	//초기화
	Sinit(&stack);

	//입력
	Spush(&stack, 1);
	Spush(&stack, 2);
	Spush(&stack, 3);
	Spush(&stack, 4);
	Spush(&stack, 5);
	
	//제거 및 출력
	if (SEmpty(stack)) 
		printf("저장된 데이터가 없습니다!\n");
	else {
		while(!SEmpty(stack))
		std::cout<<Spop(&stack)<<std::endl;
	}

	return 0;
}